// Place your key bindings in this file to override the defaults
[
  // VIM srolling
  {
    "command": "germanScroll.arminUp",
    "key": "ctrl+y",
    "mac": "cmd+y",
    "when": "vim.active && editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "command": "germanScroll.arminDown",
    "key": "ctrl+e",
    "mac": "cmd+e",
    "when": "vim.active && editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "command": "germanScroll.bertholdUp",
    "key": "ctrl+u",
    "mac": "cmd+u",
    "when": "vim.active && editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "command": "germanScroll.bertholdDown",
    "key": "ctrl+d",
    "mac": "cmd+d",
    "when": "vim.active && editorTextFocus && vim.mode != 'Insert'"
  },
  // {
  //   "command": "germanScroll.christaUp",
  //   "key": "ctrl+b",
  //   "mac": "cmd+b",
  //   "when": "vim.active && editorTextFocus && vim.mode != 'Insert'"
  // },
  // {
  //   "command": "germanScroll.christaDown",
  //   "key": "ctrl+f",
  //   "mac": "cmd+f",
  //   "when": "vim.active && editorTextFocus && vim.mode != 'Insert'"
  // },
  {
    "key": "ctrl+/",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+a shift+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+]",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+[",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "/",
    "command": "list.find",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },

  // Split
  {
    "key": "ctrl+a shift+\\", // shift+\\ = |
    "command": "workbench.action.splitEditor",
    "when": "!terminalFocus",
    // "when": "inputFocus && vim.mode=='Normal' && editorFocus"
  },
  {
    "key": "ctrl+a -",
    "command": "workbench.action.splitEditorOrthogonal",
    "when": "!terminalFocus",
    // "when": "inputFocus && vim.mode=='Normal' && editorFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+a m",
    "command": "workbench.action.toggleEditorWidths"
  },

  // Zen mode
  {
    "key": "ctrl+a z",
    "command": "workbench.action.toggleZenMode"
  },

  // Navigation options
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "explorerViewletFocus || filesExplorerFocus || openEditorsFocus"
  },
  // Multiselection next
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus && vim.active && vim.mode == 'Visual'"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  // ============== Unbindings ===================
  {
    "key": "ctrl+/",
    "command": "-github.copilot.acceptCursorPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+/",
    "command": "-toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+/",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.accessibleViewAcceptInlineCompletion",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "alt+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "d",
    "command": "moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "tab",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "space",
    "command": "-filesExplorer.openFilePreserveFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "tab",
    "command": "list.toggleExpand",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "space",
    "command": "-list.toggleExpand",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+g g",
    "command": "workbench.scm.focus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "command": "germanScroll.christaDown",
    "key": "ctrl+f",
    "mac": "cmd+f",
    "when": "vim.active && editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "] h",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "[ h",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "] ]",
    "command": "workbench.action.compareEditor.focusPrimarySide",
    "when": "textCompareEditorActive && editorTextFocus"
  },
  {
    "key": "[ [",
    "command": "workbench.action.compareEditor.focusSecondarySide",
    "when": "textCompareEditorActive && editorTextFocus"
  },
  {
    "key": "ctrl+a a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "ctrl+a",
    "command": "-editor.action.selectAll"
  },
  {
    "key": "ctrl+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+down",
    "command": "-search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+k",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "ctrl+up",
    "command": "-search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "ctrl+shift+o",
    "command": "gitlens.openWorkingFile",
    "when": "inDiffEditor"
  },
  {
    "key": "ctrl+a m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g a",
    "command": "git.stage",
    "when": "!operationInProgress"
  },
  {
    "key": "ctrl+g u",
    "command": "git.unstage",
    "when": "!operationInProgress"
  },
  {
    "key": "ctrl+w",
    "command": "extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+w",
    "command": "-extension.vim_ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+a ctrl+m",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  }
]